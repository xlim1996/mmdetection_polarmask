2023-03-10 11:02:44,647 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.12 | packaged by conda-forge | (default, Oct 26 2021, 06:08:21) [GCC 9.4.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3080 Ti
CUDA_HOME: /home/ali/miniconda3/envs/mm-polar
NVCC: Cuda compilation tools, release 11.7, V11.7.64
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.10.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - Built with CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.0
OpenCV: 4.7.0
MMCV: 1.7.0
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 11.7
MMDetection: 2.28.2+e9cae2d
------------------------------------------------------------

2023-03-10 11:02:44,799 - mmdet - INFO - Distributed training: False
2023-03-10 11:02:44,901 - mmdet - INFO - Config:
model = dict(
    type='PolarMask',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        start_level=1,
        add_extra_convs='on_output',
        num_outs=5,
        relu_before_extra_convs=True),
    bbox_head=dict(
        type='PolarMask_Head',
        num_classes=4,
        in_channels=256,
        stacked_convs=4,
        feat_channels=256,
        strides=[8, 16, 32, 64, 128],
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=1.0),
        loss_bbox=dict(type='IoULoss', loss_weight=1.0),
        loss_centerness=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)),
    train_cfg=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.4,
            min_pos_iou=0.0,
            ignore_iof_thr=-1,
            gt_max_assign_all=False),
        allowed_border=-1,
        pos_weight=-1,
        neg_pos_ratio=3,
        debug=False),
    test_cfg=dict(
        nms_pre=1000,
        min_bbox_size=0,
        score_thr=0.05,
        iou_thr=0.5,
        nms=dict(type='nms', iou_thr=0.5),
        max_per_img=100))
dataset_type = 'CocoSegDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[102.9801, 115.9465, 122.7717], std=[1.0, 1.0, 1.0], to_rgb=False)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='LoadAnnotations',
        with_bbox=True,
        with_mask=True,
        with_label=True),
    dict(type='Resize', img_scale=(1280, 768), keep_ratio=False),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[102.9801, 115.9465, 122.7717],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
]
val_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', img_scale=(1280, 768), keep_ratio=False),
    dict(type='RandomFlip', flip_ratio=0.0),
    dict(
        type='Normalize',
        mean=[102.9801, 115.9465, 122.7717],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1280, 768),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=False),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[102.9801, 115.9465, 122.7717],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    imgs_per_gpu=4,
    workers_per_gpu=5,
    train=dict(
        type='CocoSegDataset',
        ann_file='data/coco/annotations/instances_train2017.json',
        img_prefix='data/coco/train2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='LoadAnnotations',
                with_bbox=True,
                with_mask=True,
                with_label=True),
            dict(type='Resize', img_scale=(1280, 768), keep_ratio=False),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[102.9801, 115.9465, 122.7717],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='DefaultFormatBundle'),
            dict(
                type='Collect',
                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
        ]),
    val=dict(
        type='CocoSegDataset',
        ann_file='data/coco/annotations/instances_val2017.json',
        img_prefix='data/coco/val2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1280, 768),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=False),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[102.9801, 115.9465, 122.7717],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoSegDataset',
        ann_file='data/coco/annotations/instances_val2017.json',
        img_prefix='data/coco/val2017/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1280, 768),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=False),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[102.9801, 115.9465, 122.7717],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
optimizer = dict(
    type='SGD',
    lr=0.01,
    momentum=0.9,
    weight_decay=0.0001,
    paramwise_cfg=dict(bias_lr_mult=2.0, bias_decay_mult=0.0))
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.3333333333333333,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=1)
checkpoint_config = dict(interval=1)
log_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = './work_dirs/polar_768_1x_r50_coco'
auto_resume = False
gpu_ids = [0]

2023-03-10 11:02:44,901 - mmdet - INFO - Set random seed to 1790027930, deterministic: False
2023-03-10 11:02:45,080 - mmdet - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-03-10 11:02:45,140 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

neck.lateral_convs.1.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

neck.lateral_convs.2.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

neck.fpn_convs.4.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.4.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.cls_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.cls_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.cls_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.cls_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.cls_convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.cls_convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.cls_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.cls_convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.cls_convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.cls_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.cls_convs.3.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.cls_convs.3.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.reg_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.reg_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.reg_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.reg_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.reg_convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.reg_convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.reg_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.reg_convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.reg_convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.reg_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.reg_convs.3.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.reg_convs.3.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.mask_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.mask_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.mask_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.mask_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.mask_convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.mask_convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.mask_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.mask_convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.mask_convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.mask_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.mask_convs.3.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.mask_convs.3.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.polar_cls.weight - torch.Size([3, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.polar_cls.bias - torch.Size([3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.polar_reg.weight - torch.Size([4, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.polar_reg.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.polar_mask.weight - torch.Size([36, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.polar_mask.bias - torch.Size([36]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.polar_centerness.weight - torch.Size([1, 256, 3, 3]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.polar_centerness.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in PolarMask_Head  

bbox_head.scales_bbox.0.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.scales_bbox.1.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.scales_bbox.2.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.scales_bbox.3.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.scales_bbox.4.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.scales_mask.0.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.scales_mask.1.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.scales_mask.2.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.scales_mask.3.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  

bbox_head.scales_mask.4.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of PolarMask  
2023-03-10 11:02:47,558 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-03-10 11:02:48,358 - mmdet - INFO - Start running, host: ali@Ohm, work_dir: /home/ali/mmdetection/work_dirs/polar_768_1x_r50_coco
2023-03-10 11:02:48,358 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-03-10 11:02:48,358 - mmdet - INFO - workflow: [('train', 1)], max: 1 epochs
2023-03-10 11:02:48,358 - mmdet - INFO - Checkpoints will be saved to /home/ali/mmdetection/work_dirs/polar_768_1x_r50_coco by HardDiskBackend.
2023-03-10 11:02:54,480 - mmdet - INFO - Epoch [1][10/4068]	lr: 3.453e-03, eta: 0:41:23, time: 0.612, data_time: 0.264, memory: 6174, loss_cls: 898.8072, loss_bbox: 6.6676, loss_mask: 4.5903, loss_centerness: 0.6933, loss: 910.7583, grad_norm: 10529.0612
2023-03-10 11:02:57,655 - mmdet - INFO - Epoch [1][20/4068]	lr: 3.587e-03, eta: 0:31:21, time: 0.317, data_time: 0.023, memory: 6174, loss_cls: 33.3280, loss_bbox: 2.4480, loss_mask: 1.9681, loss_centerness: 0.5484, loss: 38.2925, grad_norm: 1994.7804
2023-03-10 11:03:00,842 - mmdet - INFO - Epoch [1][30/4068]	lr: 3.720e-03, eta: 0:28:00, time: 0.319, data_time: 0.024, memory: 6174, loss_cls: 4.8203, loss_bbox: 5.4480, loss_mask: 1.4591, loss_centerness: 0.6845, loss: 12.4119, grad_norm: 70.5973
2023-03-10 11:03:04,027 - mmdet - INFO - Epoch [1][40/4068]	lr: 3.853e-03, eta: 0:26:17, time: 0.319, data_time: 0.023, memory: 6174, loss_cls: 14.5571, loss_bbox: 3.4246, loss_mask: 1.1352, loss_centerness: 0.7579, loss: 19.8749, grad_norm: 464.6095
2023-03-10 11:03:07,217 - mmdet - INFO - Epoch [1][50/4068]	lr: 3.987e-03, eta: 0:25:15, time: 0.319, data_time: 0.024, memory: 6174, loss_cls: 13.1785, loss_bbox: 2.4392, loss_mask: 0.9370, loss_centerness: 0.6311, loss: 17.1858, grad_norm: 572.4720
2023-03-10 11:03:10,428 - mmdet - INFO - Epoch [1][60/4068]	lr: 4.120e-03, eta: 0:24:34, time: 0.321, data_time: 0.027, memory: 6174, loss_cls: 7.2845, loss_bbox: 2.3700, loss_mask: 0.8350, loss_centerness: 0.8093, loss: 11.2989, grad_norm: 144.9817
2023-03-10 11:03:13,618 - mmdet - INFO - Epoch [1][70/4068]	lr: 4.253e-03, eta: 0:24:02, time: 0.319, data_time: 0.025, memory: 6174, loss_cls: 3.4123, loss_bbox: 2.0978, loss_mask: 0.7294, loss_centerness: 0.7856, loss: 7.0252, grad_norm: 33.2518
2023-03-10 11:03:16,806 - mmdet - INFO - Epoch [1][80/4068]	lr: 4.387e-03, eta: 0:23:38, time: 0.319, data_time: 0.024, memory: 6174, loss_cls: 10.1084, loss_bbox: 2.2151, loss_mask: 0.8427, loss_centerness: 0.6352, loss: 13.8013, grad_norm: 226.2269
2023-03-10 11:03:19,999 - mmdet - INFO - Epoch [1][90/4068]	lr: 4.520e-03, eta: 0:23:18, time: 0.319, data_time: 0.025, memory: 6174, loss_cls: 3.0912, loss_bbox: 2.5228, loss_mask: 0.8123, loss_centerness: 0.6287, loss: 7.0550, grad_norm: 27.7741
2023-03-10 11:03:23,176 - mmdet - INFO - Epoch [1][100/4068]	lr: 4.653e-03, eta: 0:23:01, time: 0.318, data_time: 0.023, memory: 6174, loss_cls: 3.0360, loss_bbox: 2.7512, loss_mask: 0.8399, loss_centerness: 0.6757, loss: 7.3029, grad_norm: 16.6986
2023-03-10 11:03:26,347 - mmdet - INFO - Epoch [1][110/4068]	lr: 4.787e-03, eta: 0:22:46, time: 0.317, data_time: 0.023, memory: 6174, loss_cls: 2.6567, loss_bbox: 1.9770, loss_mask: 0.6218, loss_centerness: 0.6446, loss: 5.9001, grad_norm: 21.5110
2023-03-10 11:03:29,528 - mmdet - INFO - Epoch [1][120/4068]	lr: 4.920e-03, eta: 0:22:34, time: 0.318, data_time: 0.024, memory: 6174, loss_cls: 2.8326, loss_bbox: 2.9823, loss_mask: 0.6999, loss_centerness: 0.6779, loss: 7.1927, grad_norm: 20.4970
2023-03-10 11:03:32,732 - mmdet - INFO - Epoch [1][130/4068]	lr: 5.053e-03, eta: 0:22:24, time: 0.320, data_time: 0.025, memory: 6174, loss_cls: 2.4930, loss_bbox: 2.3795, loss_mask: 0.6721, loss_centerness: 0.6888, loss: 6.2334, grad_norm: 17.9241
2023-03-10 11:03:35,945 - mmdet - INFO - Epoch [1][140/4068]	lr: 5.187e-03, eta: 0:22:15, time: 0.321, data_time: 0.025, memory: 6174, loss_cls: 2.3893, loss_bbox: 2.0930, loss_mask: 0.6171, loss_centerness: 0.6909, loss: 5.7903, grad_norm: 14.7250
2023-03-10 11:03:39,125 - mmdet - INFO - Epoch [1][150/4068]	lr: 5.320e-03, eta: 0:22:05, time: 0.318, data_time: 0.023, memory: 6174, loss_cls: 2.2014, loss_bbox: 2.5718, loss_mask: 0.6359, loss_centerness: 0.6982, loss: 6.1073, grad_norm: 15.7529
2023-03-10 11:03:42,319 - mmdet - INFO - Epoch [1][160/4068]	lr: 5.453e-03, eta: 0:21:57, time: 0.319, data_time: 0.023, memory: 6174, loss_cls: 2.3739, loss_bbox: 3.5612, loss_mask: 0.7183, loss_centerness: 0.6174, loss: 7.2707, grad_norm: 17.5651
2023-03-10 11:03:45,521 - mmdet - INFO - Epoch [1][170/4068]	lr: 5.587e-03, eta: 0:21:50, time: 0.320, data_time: 0.023, memory: 6174, loss_cls: 2.3224, loss_bbox: 2.8456, loss_mask: 0.5886, loss_centerness: 0.6006, loss: 6.3572, grad_norm: 16.6981
2023-03-10 11:03:48,719 - mmdet - INFO - Epoch [1][180/4068]	lr: 5.720e-03, eta: 0:21:43, time: 0.320, data_time: 0.023, memory: 6174, loss_cls: 5.1864, loss_bbox: 3.0103, loss_mask: 0.7126, loss_centerness: 0.6410, loss: 9.5503, grad_norm: 127.7886
2023-03-10 11:03:51,912 - mmdet - INFO - Epoch [1][190/4068]	lr: 5.853e-03, eta: 0:21:37, time: 0.319, data_time: 0.023, memory: 6174, loss_cls: 2.6488, loss_bbox: 4.0346, loss_mask: 0.7048, loss_centerness: 0.6719, loss: 8.0601, grad_norm: 22.1174
2023-03-10 11:03:55,101 - mmdet - INFO - Epoch [1][200/4068]	lr: 5.987e-03, eta: 0:21:30, time: 0.319, data_time: 0.022, memory: 6174, loss_cls: 2.3796, loss_bbox: 4.6047, loss_mask: 0.6547, loss_centerness: 0.6932, loss: 8.3322, grad_norm: 16.4590
2023-03-10 11:03:58,293 - mmdet - INFO - Epoch [1][210/4068]	lr: 6.120e-03, eta: 0:21:24, time: 0.319, data_time: 0.024, memory: 6174, loss_cls: 3.7176, loss_bbox: 5.8450, loss_mask: 0.9272, loss_centerness: 0.6701, loss: 11.1599, grad_norm: 18.6677
2023-03-10 11:04:01,488 - mmdet - INFO - Epoch [1][220/4068]	lr: 6.253e-03, eta: 0:21:19, time: 0.319, data_time: 0.024, memory: 6174, loss_cls: 4.3293, loss_bbox: 4.3200, loss_mask: 1.1461, loss_centerness: 0.6903, loss: 10.4857, grad_norm: 67.0608
2023-03-10 11:04:04,702 - mmdet - INFO - Epoch [1][230/4068]	lr: 6.387e-03, eta: 0:21:13, time: 0.321, data_time: 0.024, memory: 6174, loss_cls: 3.2402, loss_bbox: 3.4199, loss_mask: 1.2142, loss_centerness: 0.6070, loss: 8.4813, grad_norm: 16.3092
2023-03-10 11:04:07,915 - mmdet - INFO - Epoch [1][240/4068]	lr: 6.520e-03, eta: 0:21:08, time: 0.321, data_time: 0.024, memory: 6174, loss_cls: 3.3118, loss_bbox: 2.7096, loss_mask: 1.2237, loss_centerness: 0.6945, loss: 7.9396, grad_norm: 18.6898
2023-03-10 11:04:11,115 - mmdet - INFO - Epoch [1][250/4068]	lr: 6.653e-03, eta: 0:21:03, time: 0.320, data_time: 0.024, memory: 6174, loss_cls: 2.5922, loss_bbox: 2.6759, loss_mask: 0.7749, loss_centerness: 0.7068, loss: 6.7498, grad_norm: 13.1893
2023-03-10 11:04:14,349 - mmdet - INFO - Epoch [1][260/4068]	lr: 6.787e-03, eta: 0:20:59, time: 0.323, data_time: 0.027, memory: 6174, loss_cls: 2.7137, loss_bbox: 2.7385, loss_mask: 0.7232, loss_centerness: 0.6817, loss: 6.8571, grad_norm: 15.7973
2023-03-10 11:04:17,583 - mmdet - INFO - Epoch [1][270/4068]	lr: 6.920e-03, eta: 0:20:55, time: 0.323, data_time: 0.026, memory: 6174, loss_cls: 4.6670, loss_bbox: 2.3781, loss_mask: 0.5592, loss_centerness: 0.6214, loss: 8.2257, grad_norm: 18.5950
2023-03-10 11:04:20,798 - mmdet - INFO - Epoch [1][280/4068]	lr: 7.053e-03, eta: 0:20:50, time: 0.322, data_time: 0.025, memory: 6174, loss_cls: 6.5363, loss_bbox: 2.8855, loss_mask: 0.6525, loss_centerness: 0.6856, loss: 10.7598, grad_norm: 32.5118
2023-03-10 11:04:24,003 - mmdet - INFO - Epoch [1][290/4068]	lr: 7.187e-03, eta: 0:20:45, time: 0.320, data_time: 0.024, memory: 6174, loss_cls: 3.4130, loss_bbox: 2.5555, loss_mask: 0.5119, loss_centerness: 0.6267, loss: 7.1072, grad_norm: 12.6179
2023-03-10 11:04:27,181 - mmdet - INFO - Epoch [1][300/4068]	lr: 7.320e-03, eta: 0:20:41, time: 0.318, data_time: 0.021, memory: 6174, loss_cls: 3.1396, loss_bbox: 3.5295, loss_mask: 0.7001, loss_centerness: 0.6561, loss: 8.0253, grad_norm: 14.7038
2023-03-10 11:04:30,389 - mmdet - INFO - Epoch [1][310/4068]	lr: 7.453e-03, eta: 0:20:36, time: 0.321, data_time: 0.024, memory: 6174, loss_cls: 3.0791, loss_bbox: 4.2780, loss_mask: 0.5847, loss_centerness: 0.6893, loss: 8.6310, grad_norm: 14.2491
2023-03-10 11:04:33,585 - mmdet - INFO - Epoch [1][320/4068]	lr: 7.587e-03, eta: 0:20:32, time: 0.320, data_time: 0.022, memory: 6174, loss_cls: 2.3616, loss_bbox: 3.1801, loss_mask: 0.7680, loss_centerness: 0.6462, loss: 6.9559, grad_norm: 13.5340
2023-03-10 11:04:36,783 - mmdet - INFO - Epoch [1][330/4068]	lr: 7.720e-03, eta: 0:20:28, time: 0.320, data_time: 0.023, memory: 6174, loss_cls: 2.3819, loss_bbox: 3.1697, loss_mask: 0.7010, loss_centerness: 0.6918, loss: 6.9443, grad_norm: 12.3003
2023-03-10 11:04:39,987 - mmdet - INFO - Epoch [1][340/4068]	lr: 7.853e-03, eta: 0:20:23, time: 0.320, data_time: 0.023, memory: 6174, loss_cls: 3.1597, loss_bbox: 3.3161, loss_mask: 0.5889, loss_centerness: 0.7240, loss: 7.7886, grad_norm: 24.8390
2023-03-10 11:04:43,188 - mmdet - INFO - Epoch [1][350/4068]	lr: 7.987e-03, eta: 0:20:19, time: 0.320, data_time: 0.023, memory: 6174, loss_cls: 2.9654, loss_bbox: 2.6984, loss_mask: 0.6810, loss_centerness: 0.6916, loss: 7.0364, grad_norm: 14.7803
2023-03-10 11:04:46,387 - mmdet - INFO - Epoch [1][360/4068]	lr: 8.120e-03, eta: 0:20:15, time: 0.320, data_time: 0.023, memory: 6174, loss_cls: 3.7345, loss_bbox: 3.3519, loss_mask: 0.6972, loss_centerness: 0.6162, loss: 8.3998, grad_norm: 15.7832
2023-03-10 11:04:49,593 - mmdet - INFO - Epoch [1][370/4068]	lr: 8.253e-03, eta: 0:20:11, time: 0.321, data_time: 0.023, memory: 6174, loss_cls: 2.9134, loss_bbox: 2.4109, loss_mask: 0.5985, loss_centerness: 0.6433, loss: 6.5660, grad_norm: 15.1571
2023-03-10 11:04:52,795 - mmdet - INFO - Epoch [1][380/4068]	lr: 8.387e-03, eta: 0:20:07, time: 0.320, data_time: 0.024, memory: 6174, loss_cls: 2.6571, loss_bbox: 2.5261, loss_mask: 0.5709, loss_centerness: 0.6784, loss: 6.4326, grad_norm: 14.7699
2023-03-10 11:04:55,996 - mmdet - INFO - Epoch [1][390/4068]	lr: 8.520e-03, eta: 0:20:03, time: 0.320, data_time: 0.024, memory: 6174, loss_cls: 3.0267, loss_bbox: 2.8352, loss_mask: 0.6351, loss_centerness: 0.5860, loss: 7.0830, grad_norm: 12.1672
2023-03-10 11:04:59,194 - mmdet - INFO - Epoch [1][400/4068]	lr: 8.653e-03, eta: 0:19:59, time: 0.320, data_time: 0.022, memory: 6174, loss_cls: 1.9214, loss_bbox: 2.3389, loss_mask: 0.6622, loss_centerness: 0.6772, loss: 5.5997, grad_norm: 10.0801
2023-03-10 11:05:02,425 - mmdet - INFO - Epoch [1][410/4068]	lr: 8.787e-03, eta: 0:19:56, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 1.9824, loss_bbox: 3.5213, loss_mask: 0.7982, loss_centerness: 0.6852, loss: 6.9870, grad_norm: 12.4393
2023-03-10 11:05:05,635 - mmdet - INFO - Epoch [1][420/4068]	lr: 8.920e-03, eta: 0:19:52, time: 0.321, data_time: 0.024, memory: 6174, loss_cls: 2.1571, loss_bbox: 5.1865, loss_mask: 0.5486, loss_centerness: 0.6888, loss: 8.5811, grad_norm: 13.9719
2023-03-10 11:05:08,831 - mmdet - INFO - Epoch [1][430/4068]	lr: 9.053e-03, eta: 0:19:48, time: 0.320, data_time: 0.023, memory: 6174, loss_cls: 2.2125, loss_bbox: 7.4560, loss_mask: 0.5135, loss_centerness: 0.6081, loss: 10.7901, grad_norm: 10.0523
2023-03-10 11:05:12,051 - mmdet - INFO - Epoch [1][440/4068]	lr: 9.187e-03, eta: 0:19:44, time: 0.322, data_time: 0.024, memory: 6174, loss_cls: 2.9308, loss_bbox: 4.8165, loss_mask: 0.5735, loss_centerness: 0.6809, loss: 9.0017, grad_norm: 13.5116
2023-03-10 11:05:15,262 - mmdet - INFO - Epoch [1][450/4068]	lr: 9.320e-03, eta: 0:19:41, time: 0.321, data_time: 0.023, memory: 6174, loss_cls: 2.2063, loss_bbox: 6.8494, loss_mask: 0.7192, loss_centerness: 0.6632, loss: 10.4382, grad_norm: 9.9537
2023-03-10 11:05:18,495 - mmdet - INFO - Epoch [1][460/4068]	lr: 9.453e-03, eta: 0:19:37, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 2.0104, loss_bbox: 5.1517, loss_mask: 0.7324, loss_centerness: 0.6528, loss: 8.5474, grad_norm: 9.3198
2023-03-10 11:05:21,703 - mmdet - INFO - Epoch [1][470/4068]	lr: 9.587e-03, eta: 0:19:33, time: 0.321, data_time: 0.024, memory: 6174, loss_cls: 2.0977, loss_bbox: 4.0017, loss_mask: 0.5861, loss_centerness: 0.6138, loss: 7.2994, grad_norm: 13.7304
2023-03-10 11:05:24,911 - mmdet - INFO - Epoch [1][480/4068]	lr: 9.720e-03, eta: 0:19:30, time: 0.321, data_time: 0.025, memory: 6174, loss_cls: 1.9622, loss_bbox: 4.3544, loss_mask: 0.5869, loss_centerness: 0.5404, loss: 7.4439, grad_norm: 9.6452
2023-03-10 11:05:28,181 - mmdet - INFO - Epoch [1][490/4068]	lr: 9.853e-03, eta: 0:19:27, time: 0.327, data_time: 0.024, memory: 6174, loss_cls: 2.3370, loss_bbox: 3.7135, loss_mask: 0.6605, loss_centerness: 0.6428, loss: 7.3538, grad_norm: 11.8561
2023-03-10 11:05:31,414 - mmdet - INFO - Epoch [1][500/4068]	lr: 9.987e-03, eta: 0:19:23, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 2.1484, loss_bbox: 2.8507, loss_mask: 0.6590, loss_centerness: 0.6941, loss: 6.3522, grad_norm: 7.1595
2023-03-10 11:05:34,638 - mmdet - INFO - Epoch [1][510/4068]	lr: 1.000e-02, eta: 0:19:20, time: 0.322, data_time: 0.024, memory: 6174, loss_cls: 2.0715, loss_bbox: 6.3217, loss_mask: 0.5422, loss_centerness: 0.7179, loss: 9.6533, grad_norm: 9.5074
2023-03-10 11:05:37,876 - mmdet - INFO - Epoch [1][520/4068]	lr: 1.000e-02, eta: 0:19:16, time: 0.324, data_time: 0.024, memory: 6174, loss_cls: 2.2633, loss_bbox: 5.5424, loss_mask: 0.5973, loss_centerness: 0.6569, loss: 9.0600, grad_norm: 8.8809
2023-03-10 11:05:41,107 - mmdet - INFO - Epoch [1][530/4068]	lr: 1.000e-02, eta: 0:19:13, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 2.1037, loss_bbox: 3.5356, loss_mask: 0.7810, loss_centerness: 0.5785, loss: 6.9987, grad_norm: 10.1777
2023-03-10 11:05:44,353 - mmdet - INFO - Epoch [1][540/4068]	lr: 1.000e-02, eta: 0:19:09, time: 0.325, data_time: 0.025, memory: 6174, loss_cls: 2.6657, loss_bbox: 2.9689, loss_mask: 0.6808, loss_centerness: 0.6309, loss: 6.9462, grad_norm: 12.0475
2023-03-10 11:05:47,600 - mmdet - INFO - Epoch [1][550/4068]	lr: 1.000e-02, eta: 0:19:06, time: 0.325, data_time: 0.024, memory: 6174, loss_cls: 3.5351, loss_bbox: 3.2767, loss_mask: 0.7705, loss_centerness: 0.5996, loss: 8.1819, grad_norm: 9.8676
2023-03-10 11:05:50,817 - mmdet - INFO - Epoch [1][560/4068]	lr: 1.000e-02, eta: 0:19:02, time: 0.322, data_time: 0.023, memory: 6174, loss_cls: 2.0436, loss_bbox: 3.2976, loss_mask: 0.6163, loss_centerness: 0.6385, loss: 6.5960, grad_norm: 12.3341
2023-03-10 11:05:54,035 - mmdet - INFO - Epoch [1][570/4068]	lr: 1.000e-02, eta: 0:18:59, time: 0.322, data_time: 0.023, memory: 6174, loss_cls: 2.0507, loss_bbox: 2.9670, loss_mask: 0.9415, loss_centerness: 0.6597, loss: 6.6189, grad_norm: 11.0786
2023-03-10 11:05:57,264 - mmdet - INFO - Epoch [1][580/4068]	lr: 1.000e-02, eta: 0:18:56, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 1.8316, loss_bbox: 2.4761, loss_mask: 0.8382, loss_centerness: 0.6337, loss: 5.7796, grad_norm: 10.8369
2023-03-10 11:06:00,481 - mmdet - INFO - Epoch [1][590/4068]	lr: 1.000e-02, eta: 0:18:52, time: 0.322, data_time: 0.023, memory: 6174, loss_cls: 2.5791, loss_bbox: 2.5730, loss_mask: 0.7438, loss_centerness: 0.6865, loss: 6.5825, grad_norm: 8.6811
2023-03-10 11:06:03,700 - mmdet - INFO - Epoch [1][600/4068]	lr: 1.000e-02, eta: 0:18:49, time: 0.322, data_time: 0.023, memory: 6174, loss_cls: 2.1736, loss_bbox: 2.9080, loss_mask: 0.6176, loss_centerness: 0.6823, loss: 6.3816, grad_norm: 7.9896
2023-03-10 11:06:06,936 - mmdet - INFO - Epoch [1][610/4068]	lr: 1.000e-02, eta: 0:18:45, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 2.1910, loss_bbox: 2.3534, loss_mask: 0.3898, loss_centerness: 0.5665, loss: 5.5008, grad_norm: 11.0718
2023-03-10 11:06:10,158 - mmdet - INFO - Epoch [1][620/4068]	lr: 1.000e-02, eta: 0:18:42, time: 0.322, data_time: 0.025, memory: 6174, loss_cls: 2.0301, loss_bbox: 2.3581, loss_mask: 0.5013, loss_centerness: 0.6938, loss: 5.5833, grad_norm: 6.9318
2023-03-10 11:06:13,394 - mmdet - INFO - Epoch [1][630/4068]	lr: 1.000e-02, eta: 0:18:38, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 2.1131, loss_bbox: 2.0340, loss_mask: 0.4376, loss_centerness: 0.6229, loss: 5.2076, grad_norm: 8.1121
2023-03-10 11:06:16,628 - mmdet - INFO - Epoch [1][640/4068]	lr: 1.000e-02, eta: 0:18:35, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 3.1825, loss_bbox: 2.2116, loss_mask: 0.5789, loss_centerness: 0.6704, loss: 6.6434, grad_norm: 10.9714
2023-03-10 11:06:19,853 - mmdet - INFO - Epoch [1][650/4068]	lr: 1.000e-02, eta: 0:18:32, time: 0.322, data_time: 0.024, memory: 6174, loss_cls: 2.9605, loss_bbox: 2.9219, loss_mask: 0.8321, loss_centerness: 0.6839, loss: 7.3984, grad_norm: 13.0706
2023-03-10 11:06:23,102 - mmdet - INFO - Epoch [1][660/4068]	lr: 1.000e-02, eta: 0:18:28, time: 0.325, data_time: 0.027, memory: 6174, loss_cls: 2.3741, loss_bbox: 3.5457, loss_mask: 0.7257, loss_centerness: 0.6049, loss: 7.2504, grad_norm: 8.7165
2023-03-10 11:06:26,348 - mmdet - INFO - Epoch [1][670/4068]	lr: 1.000e-02, eta: 0:18:25, time: 0.325, data_time: 0.026, memory: 6174, loss_cls: 2.1689, loss_bbox: 3.9426, loss_mask: 0.6351, loss_centerness: 0.6934, loss: 7.4399, grad_norm: 10.7285
2023-03-10 11:06:29,607 - mmdet - INFO - Epoch [1][680/4068]	lr: 1.000e-02, eta: 0:18:22, time: 0.326, data_time: 0.027, memory: 6174, loss_cls: 2.2847, loss_bbox: 3.0262, loss_mask: 0.7008, loss_centerness: 0.6292, loss: 6.6408, grad_norm: 8.4101
2023-03-10 11:06:32,861 - mmdet - INFO - Epoch [1][690/4068]	lr: 1.000e-02, eta: 0:18:19, time: 0.325, data_time: 0.026, memory: 6174, loss_cls: 2.3019, loss_bbox: 3.5453, loss_mask: 0.7574, loss_centerness: 0.6276, loss: 7.2321, grad_norm: 8.7749
2023-03-10 11:06:36,075 - mmdet - INFO - Epoch [1][700/4068]	lr: 1.000e-02, eta: 0:18:15, time: 0.321, data_time: 0.023, memory: 6174, loss_cls: 1.8189, loss_bbox: 2.4726, loss_mask: 0.6721, loss_centerness: 0.6886, loss: 5.6522, grad_norm: 7.0906
2023-03-10 11:06:39,312 - mmdet - INFO - Epoch [1][710/4068]	lr: 1.000e-02, eta: 0:18:12, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 1.6279, loss_bbox: 2.6562, loss_mask: 0.5567, loss_centerness: 0.6698, loss: 5.5107, grad_norm: 6.9414
2023-03-10 11:06:42,543 - mmdet - INFO - Epoch [1][720/4068]	lr: 1.000e-02, eta: 0:18:08, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 1.9732, loss_bbox: 2.7166, loss_mask: 0.5650, loss_centerness: 0.6758, loss: 5.9306, grad_norm: 5.8983
2023-03-10 11:06:45,784 - mmdet - INFO - Epoch [1][730/4068]	lr: 1.000e-02, eta: 0:18:05, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 2.1970, loss_bbox: 2.1641, loss_mask: 0.6963, loss_centerness: 0.6550, loss: 5.7125, grad_norm: 5.6776
2023-03-10 11:06:49,011 - mmdet - INFO - Epoch [1][740/4068]	lr: 1.000e-02, eta: 0:18:02, time: 0.323, data_time: 0.023, memory: 6174, loss_cls: 2.3186, loss_bbox: 1.8957, loss_mask: 0.6108, loss_centerness: 0.5652, loss: 5.3903, grad_norm: 5.7092
2023-03-10 11:06:52,240 - mmdet - INFO - Epoch [1][750/4068]	lr: 1.000e-02, eta: 0:17:58, time: 0.323, data_time: 0.023, memory: 6174, loss_cls: 1.9274, loss_bbox: 2.0072, loss_mask: 0.6125, loss_centerness: 0.6841, loss: 5.2312, grad_norm: 5.1151
2023-03-10 11:06:55,481 - mmdet - INFO - Epoch [1][760/4068]	lr: 1.000e-02, eta: 0:17:55, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 2.0197, loss_bbox: 1.9120, loss_mask: 0.7416, loss_centerness: 0.5814, loss: 5.2548, grad_norm: 5.5002
2023-03-10 11:06:58,719 - mmdet - INFO - Epoch [1][770/4068]	lr: 1.000e-02, eta: 0:17:52, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 2.0700, loss_bbox: 1.9837, loss_mask: 0.7818, loss_centerness: 0.6960, loss: 5.5315, grad_norm: 5.2089
2023-03-10 11:07:01,943 - mmdet - INFO - Epoch [1][780/4068]	lr: 1.000e-02, eta: 0:17:48, time: 0.322, data_time: 0.024, memory: 6174, loss_cls: 2.0556, loss_bbox: 1.9693, loss_mask: 0.7543, loss_centerness: 0.5979, loss: 5.3771, grad_norm: 5.2938
2023-03-10 11:07:05,160 - mmdet - INFO - Epoch [1][790/4068]	lr: 1.000e-02, eta: 0:17:45, time: 0.322, data_time: 0.023, memory: 6174, loss_cls: 2.3668, loss_bbox: 1.7203, loss_mask: 0.5552, loss_centerness: 0.6085, loss: 5.2508, grad_norm: 5.7777
2023-03-10 11:07:08,401 - mmdet - INFO - Epoch [1][800/4068]	lr: 1.000e-02, eta: 0:17:42, time: 0.324, data_time: 0.024, memory: 6174, loss_cls: 2.1462, loss_bbox: 1.9408, loss_mask: 0.5524, loss_centerness: 0.6678, loss: 5.3072, grad_norm: 4.0914
2023-03-10 11:07:11,638 - mmdet - INFO - Epoch [1][810/4068]	lr: 1.000e-02, eta: 0:17:38, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 2.0723, loss_bbox: 1.2452, loss_mask: 0.3030, loss_centerness: 0.4733, loss: 4.0938, grad_norm: 3.7923
2023-03-10 11:07:14,902 - mmdet - INFO - Epoch [1][820/4068]	lr: 1.000e-02, eta: 0:17:35, time: 0.326, data_time: 0.027, memory: 6174, loss_cls: 2.8378, loss_bbox: 1.8159, loss_mask: 0.5010, loss_centerness: 0.6634, loss: 5.8181, grad_norm: 4.0089
2023-03-10 11:07:18,157 - mmdet - INFO - Epoch [1][830/4068]	lr: 1.000e-02, eta: 0:17:32, time: 0.326, data_time: 0.026, memory: 6174, loss_cls: 2.5315, loss_bbox: 1.7929, loss_mask: 0.5308, loss_centerness: 0.6016, loss: 5.4567, grad_norm: 5.7239
2023-03-10 11:07:21,394 - mmdet - INFO - Epoch [1][840/4068]	lr: 1.000e-02, eta: 0:17:29, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 2.0837, loss_bbox: 1.4280, loss_mask: 0.5258, loss_centerness: 0.4747, loss: 4.5122, grad_norm: 3.6813
2023-03-10 11:07:24,631 - mmdet - INFO - Epoch [1][850/4068]	lr: 1.000e-02, eta: 0:17:25, time: 0.324, data_time: 0.024, memory: 6174, loss_cls: 1.9792, loss_bbox: 1.8289, loss_mask: 0.5647, loss_centerness: 0.6117, loss: 4.9844, grad_norm: 4.4680
2023-03-10 11:07:27,877 - mmdet - INFO - Epoch [1][860/4068]	lr: 1.000e-02, eta: 0:17:22, time: 0.325, data_time: 0.026, memory: 6174, loss_cls: 2.5524, loss_bbox: 1.8387, loss_mask: 0.5775, loss_centerness: 0.5872, loss: 5.5558, grad_norm: 7.4196
2023-03-10 11:07:31,109 - mmdet - INFO - Epoch [1][870/4068]	lr: 1.000e-02, eta: 0:17:19, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 3.1620, loss_bbox: 1.9594, loss_mask: 0.6913, loss_centerness: 0.6692, loss: 6.4819, grad_norm: 4.6973
2023-03-10 11:07:34,370 - mmdet - INFO - Epoch [1][880/4068]	lr: 1.000e-02, eta: 0:17:16, time: 0.326, data_time: 0.027, memory: 6174, loss_cls: 2.2854, loss_bbox: 1.9587, loss_mask: 0.5476, loss_centerness: 0.6790, loss: 5.4708, grad_norm: 4.8221
2023-03-10 11:07:37,614 - mmdet - INFO - Epoch [1][890/4068]	lr: 1.000e-02, eta: 0:17:12, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 2.0244, loss_bbox: 1.4488, loss_mask: 0.5827, loss_centerness: 0.5614, loss: 4.6172, grad_norm: 5.0213
2023-03-10 11:07:40,830 - mmdet - INFO - Epoch [1][900/4068]	lr: 1.000e-02, eta: 0:17:09, time: 0.322, data_time: 0.023, memory: 6174, loss_cls: 2.4431, loss_bbox: 1.8141, loss_mask: 0.4864, loss_centerness: 0.6709, loss: 5.4145, grad_norm: 4.2232
2023-03-10 11:07:44,059 - mmdet - INFO - Epoch [1][910/4068]	lr: 1.000e-02, eta: 0:17:06, time: 0.323, data_time: 0.023, memory: 6174, loss_cls: 1.8896, loss_bbox: 1.8335, loss_mask: 0.5032, loss_centerness: 0.6693, loss: 4.8957, grad_norm: 3.7839
2023-03-10 11:07:47,308 - mmdet - INFO - Epoch [1][920/4068]	lr: 1.000e-02, eta: 0:17:02, time: 0.325, data_time: 0.025, memory: 6174, loss_cls: 1.9522, loss_bbox: 1.7439, loss_mask: 0.5301, loss_centerness: 0.5992, loss: 4.8253, grad_norm: 4.4424
2023-03-10 11:07:50,589 - mmdet - INFO - Epoch [1][930/4068]	lr: 1.000e-02, eta: 0:16:59, time: 0.328, data_time: 0.028, memory: 6174, loss_cls: 2.1069, loss_bbox: 1.7862, loss_mask: 0.5734, loss_centerness: 0.5980, loss: 5.0644, grad_norm: 4.7288
2023-03-10 11:07:53,839 - mmdet - INFO - Epoch [1][940/4068]	lr: 1.000e-02, eta: 0:16:56, time: 0.325, data_time: 0.025, memory: 6174, loss_cls: 1.9215, loss_bbox: 1.8829, loss_mask: 0.4947, loss_centerness: 0.6886, loss: 4.9877, grad_norm: 4.0961
2023-03-10 11:07:57,100 - mmdet - INFO - Epoch [1][950/4068]	lr: 1.000e-02, eta: 0:16:53, time: 0.326, data_time: 0.026, memory: 6174, loss_cls: 1.8321, loss_bbox: 2.0779, loss_mask: 0.5928, loss_centerness: 0.6595, loss: 5.1622, grad_norm: 3.5735
2023-03-10 11:08:00,358 - mmdet - INFO - Epoch [1][960/4068]	lr: 1.000e-02, eta: 0:16:50, time: 0.326, data_time: 0.025, memory: 6174, loss_cls: 2.2136, loss_bbox: 1.7924, loss_mask: 0.5112, loss_centerness: 0.5947, loss: 5.1120, grad_norm: 5.1519
2023-03-10 11:08:03,611 - mmdet - INFO - Epoch [1][970/4068]	lr: 1.000e-02, eta: 0:16:46, time: 0.325, data_time: 0.025, memory: 6174, loss_cls: 1.7241, loss_bbox: 1.9315, loss_mask: 0.5290, loss_centerness: 0.6719, loss: 4.8565, grad_norm: 4.4081
2023-03-10 11:08:06,852 - mmdet - INFO - Epoch [1][980/4068]	lr: 1.000e-02, eta: 0:16:43, time: 0.324, data_time: 0.024, memory: 6174, loss_cls: 1.7149, loss_bbox: 1.9304, loss_mask: 0.5745, loss_centerness: 0.6888, loss: 4.9086, grad_norm: 4.5347
2023-03-10 11:08:10,142 - mmdet - INFO - Epoch [1][990/4068]	lr: 1.000e-02, eta: 0:16:40, time: 0.329, data_time: 0.024, memory: 6174, loss_cls: 1.6955, loss_bbox: 1.7242, loss_mask: 0.3955, loss_centerness: 0.6269, loss: 4.4421, grad_norm: 4.8541
2023-03-10 11:08:13,414 - mmdet - INFO - Exp name: polar_768_1x_r50_coco.py
2023-03-10 11:08:13,414 - mmdet - INFO - Epoch [1][1000/4068]	lr: 1.000e-02, eta: 0:16:37, time: 0.327, data_time: 0.024, memory: 6174, loss_cls: 2.0889, loss_bbox: 2.0340, loss_mask: 0.7377, loss_centerness: 0.6811, loss: 5.5417, grad_norm: 4.3332
2023-03-10 11:08:16,633 - mmdet - INFO - Epoch [1][1010/4068]	lr: 1.000e-02, eta: 0:16:33, time: 0.322, data_time: 0.023, memory: 6174, loss_cls: 1.6803, loss_bbox: 1.9654, loss_mask: 0.6588, loss_centerness: 0.6713, loss: 4.9758, grad_norm: 4.6851
2023-03-10 11:08:19,861 - mmdet - INFO - Epoch [1][1020/4068]	lr: 1.000e-02, eta: 0:16:30, time: 0.323, data_time: 0.023, memory: 6174, loss_cls: 2.1452, loss_bbox: 1.9199, loss_mask: 0.6555, loss_centerness: 0.6786, loss: 5.3993, grad_norm: 4.1458
2023-03-10 11:08:23,097 - mmdet - INFO - Epoch [1][1030/4068]	lr: 1.000e-02, eta: 0:16:27, time: 0.324, data_time: 0.024, memory: 6174, loss_cls: 1.8410, loss_bbox: 1.9404, loss_mask: 0.5858, loss_centerness: 0.6571, loss: 5.0242, grad_norm: 3.6212
2023-03-10 11:08:26,391 - mmdet - INFO - Epoch [1][1040/4068]	lr: 1.000e-02, eta: 0:16:24, time: 0.329, data_time: 0.029, memory: 6174, loss_cls: 1.9524, loss_bbox: 1.8990, loss_mask: 0.5357, loss_centerness: 0.6776, loss: 5.0646, grad_norm: 4.0661
2023-03-10 11:08:29,623 - mmdet - INFO - Epoch [1][1050/4068]	lr: 1.000e-02, eta: 0:16:20, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 1.7671, loss_bbox: 1.6659, loss_mask: 0.6280, loss_centerness: 0.6167, loss: 4.6777, grad_norm: 4.5796
2023-03-10 11:08:32,854 - mmdet - INFO - Epoch [1][1060/4068]	lr: 1.000e-02, eta: 0:16:17, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 2.0323, loss_bbox: 1.8841, loss_mask: 0.6577, loss_centerness: 0.6481, loss: 5.2222, grad_norm: 4.6236
2023-03-10 11:08:36,087 - mmdet - INFO - Epoch [1][1070/4068]	lr: 1.000e-02, eta: 0:16:14, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 1.9088, loss_bbox: 1.8562, loss_mask: 0.5687, loss_centerness: 0.6764, loss: 5.0101, grad_norm: 4.0231
2023-03-10 11:08:39,311 - mmdet - INFO - Epoch [1][1080/4068]	lr: 1.000e-02, eta: 0:16:10, time: 0.322, data_time: 0.024, memory: 6174, loss_cls: 1.7407, loss_bbox: 1.3005, loss_mask: 0.3263, loss_centerness: 0.4740, loss: 3.8416, grad_norm: 4.0956
2023-03-10 11:08:42,561 - mmdet - INFO - Epoch [1][1090/4068]	lr: 1.000e-02, eta: 0:16:07, time: 0.325, data_time: 0.025, memory: 6174, loss_cls: 1.8933, loss_bbox: 1.7372, loss_mask: 0.4884, loss_centerness: 0.6017, loss: 4.7207, grad_norm: 4.0196
2023-03-10 11:08:45,802 - mmdet - INFO - Epoch [1][1100/4068]	lr: 1.000e-02, eta: 0:16:04, time: 0.324, data_time: 0.024, memory: 6174, loss_cls: 1.8651, loss_bbox: 1.7415, loss_mask: 0.4257, loss_centerness: 0.6029, loss: 4.6352, grad_norm: 4.0417
2023-03-10 11:08:49,030 - mmdet - INFO - Epoch [1][1110/4068]	lr: 1.000e-02, eta: 0:16:01, time: 0.323, data_time: 0.023, memory: 6174, loss_cls: 1.8749, loss_bbox: 2.0618, loss_mask: 0.5414, loss_centerness: 0.6737, loss: 5.1517, grad_norm: 3.9327
2023-03-10 11:08:52,310 - mmdet - INFO - Epoch [1][1120/4068]	lr: 1.000e-02, eta: 0:15:57, time: 0.328, data_time: 0.028, memory: 6174, loss_cls: 2.0275, loss_bbox: 1.9256, loss_mask: 0.5056, loss_centerness: 0.6687, loss: 5.1274, grad_norm: 3.5641
2023-03-10 11:08:55,567 - mmdet - INFO - Epoch [1][1130/4068]	lr: 1.000e-02, eta: 0:15:54, time: 0.326, data_time: 0.026, memory: 6174, loss_cls: 1.9270, loss_bbox: 1.7011, loss_mask: 0.4124, loss_centerness: 0.5941, loss: 4.6346, grad_norm: 4.3648
2023-03-10 11:08:58,825 - mmdet - INFO - Epoch [1][1140/4068]	lr: 1.000e-02, eta: 0:15:51, time: 0.326, data_time: 0.028, memory: 6174, loss_cls: 2.1423, loss_bbox: 1.8005, loss_mask: 0.6768, loss_centerness: 0.6069, loss: 5.2265, grad_norm: 4.3800
2023-03-10 11:09:02,058 - mmdet - INFO - Epoch [1][1150/4068]	lr: 1.000e-02, eta: 0:15:48, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 2.1087, loss_bbox: 2.0730, loss_mask: 0.4784, loss_centerness: 0.6802, loss: 5.3402, grad_norm: 3.9229
2023-03-10 11:09:05,309 - mmdet - INFO - Epoch [1][1160/4068]	lr: 1.000e-02, eta: 0:15:44, time: 0.325, data_time: 0.026, memory: 6174, loss_cls: 1.9613, loss_bbox: 2.0102, loss_mask: 0.5517, loss_centerness: 0.6646, loss: 5.1878, grad_norm: 3.8688
2023-03-10 11:09:08,544 - mmdet - INFO - Epoch [1][1170/4068]	lr: 1.000e-02, eta: 0:15:41, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 1.7143, loss_bbox: 2.0181, loss_mask: 0.4783, loss_centerness: 0.6838, loss: 4.8944, grad_norm: 3.6153
2023-03-10 11:09:11,770 - mmdet - INFO - Epoch [1][1180/4068]	lr: 1.000e-02, eta: 0:15:38, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 1.7144, loss_bbox: 2.0491, loss_mask: 0.4807, loss_centerness: 0.6933, loss: 4.9374, grad_norm: 3.5994
2023-03-10 11:09:14,997 - mmdet - INFO - Epoch [1][1190/4068]	lr: 1.000e-02, eta: 0:15:35, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 2.2435, loss_bbox: 1.7746, loss_mask: 0.4268, loss_centerness: 0.6283, loss: 5.0732, grad_norm: 4.3238
2023-03-10 11:09:18,219 - mmdet - INFO - Epoch [1][1200/4068]	lr: 1.000e-02, eta: 0:15:31, time: 0.322, data_time: 0.025, memory: 6174, loss_cls: 2.2766, loss_bbox: 1.7750, loss_mask: 0.4359, loss_centerness: 0.6107, loss: 5.0982, grad_norm: 5.2329
2023-03-10 11:09:21,424 - mmdet - INFO - Epoch [1][1210/4068]	lr: 1.000e-02, eta: 0:15:28, time: 0.320, data_time: 0.023, memory: 6174, loss_cls: 1.9666, loss_bbox: 1.9412, loss_mask: 0.5375, loss_centerness: 0.6139, loss: 5.0593, grad_norm: 4.1622
2023-03-10 11:09:24,653 - mmdet - INFO - Epoch [1][1220/4068]	lr: 1.000e-02, eta: 0:15:25, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 2.2781, loss_bbox: 1.6535, loss_mask: 0.3999, loss_centerness: 0.6183, loss: 4.9498, grad_norm: 4.8540
2023-03-10 11:09:27,877 - mmdet - INFO - Epoch [1][1230/4068]	lr: 1.000e-02, eta: 0:15:21, time: 0.322, data_time: 0.024, memory: 6174, loss_cls: 2.1273, loss_bbox: 1.6348, loss_mask: 0.5630, loss_centerness: 0.5284, loss: 4.8535, grad_norm: 4.9606
2023-03-10 11:09:31,095 - mmdet - INFO - Epoch [1][1240/4068]	lr: 1.000e-02, eta: 0:15:18, time: 0.322, data_time: 0.024, memory: 6174, loss_cls: 2.3279, loss_bbox: 1.6619, loss_mask: 0.4941, loss_centerness: 0.6033, loss: 5.0873, grad_norm: 3.1139
2023-03-10 11:09:34,343 - mmdet - INFO - Epoch [1][1250/4068]	lr: 1.000e-02, eta: 0:15:15, time: 0.325, data_time: 0.026, memory: 6174, loss_cls: 1.8903, loss_bbox: 1.8693, loss_mask: 0.5887, loss_centerness: 0.6613, loss: 5.0095, grad_norm: 4.0787
2023-03-10 11:09:37,570 - mmdet - INFO - Epoch [1][1260/4068]	lr: 1.000e-02, eta: 0:15:11, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 2.0672, loss_bbox: 1.5986, loss_mask: 0.5281, loss_centerness: 0.5269, loss: 4.7207, grad_norm: 4.8848
2023-03-10 11:09:40,804 - mmdet - INFO - Epoch [1][1270/4068]	lr: 1.000e-02, eta: 0:15:08, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 2.0914, loss_bbox: 1.7365, loss_mask: 0.5278, loss_centerness: 0.6375, loss: 4.9932, grad_norm: 3.5673
2023-03-10 11:09:44,060 - mmdet - INFO - Epoch [1][1280/4068]	lr: 1.000e-02, eta: 0:15:05, time: 0.326, data_time: 0.027, memory: 6174, loss_cls: 2.3052, loss_bbox: 2.0191, loss_mask: 0.5757, loss_centerness: 0.6645, loss: 5.5645, grad_norm: 3.8969
2023-03-10 11:09:47,310 - mmdet - INFO - Epoch [1][1290/4068]	lr: 1.000e-02, eta: 0:15:02, time: 0.325, data_time: 0.026, memory: 6174, loss_cls: 2.2351, loss_bbox: 2.0479, loss_mask: 0.8207, loss_centerness: 0.6657, loss: 5.7693, grad_norm: 4.2309
2023-03-10 11:09:50,530 - mmdet - INFO - Epoch [1][1300/4068]	lr: 1.000e-02, eta: 0:14:58, time: 0.322, data_time: 0.024, memory: 6174, loss_cls: 1.9792, loss_bbox: 1.9818, loss_mask: 0.6312, loss_centerness: 0.6718, loss: 5.2640, grad_norm: 4.1210
2023-03-10 11:09:53,765 - mmdet - INFO - Epoch [1][1310/4068]	lr: 1.000e-02, eta: 0:14:55, time: 0.324, data_time: 0.025, memory: 6174, loss_cls: 1.9062, loss_bbox: 1.9228, loss_mask: 0.5269, loss_centerness: 0.6740, loss: 5.0300, grad_norm: 3.3619
2023-03-10 11:09:56,998 - mmdet - INFO - Epoch [1][1320/4068]	lr: 1.000e-02, eta: 0:14:52, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 1.8291, loss_bbox: 1.9996, loss_mask: 0.5901, loss_centerness: 0.6701, loss: 5.0889, grad_norm: 4.2798
2023-03-10 11:10:00,265 - mmdet - INFO - Epoch [1][1330/4068]	lr: 1.000e-02, eta: 0:14:49, time: 0.327, data_time: 0.028, memory: 6174, loss_cls: 2.2301, loss_bbox: 1.7548, loss_mask: 0.5053, loss_centerness: 0.5833, loss: 5.0735, grad_norm: 3.9417
2023-03-10 11:10:03,495 - mmdet - INFO - Epoch [1][1340/4068]	lr: 1.000e-02, eta: 0:14:45, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 1.9459, loss_bbox: 2.0735, loss_mask: 0.5436, loss_centerness: 0.6726, loss: 5.2356, grad_norm: 3.6866
2023-03-10 11:10:06,705 - mmdet - INFO - Epoch [1][1350/4068]	lr: 1.000e-02, eta: 0:14:42, time: 0.321, data_time: 0.023, memory: 6174, loss_cls: 2.3313, loss_bbox: 1.7389, loss_mask: 0.5024, loss_centerness: 0.6378, loss: 5.2104, grad_norm: 4.6337
2023-03-10 11:10:09,919 - mmdet - INFO - Epoch [1][1360/4068]	lr: 1.000e-02, eta: 0:14:39, time: 0.321, data_time: 0.023, memory: 6174, loss_cls: 2.0049, loss_bbox: 2.0437, loss_mask: 0.5409, loss_centerness: 0.6732, loss: 5.2626, grad_norm: 4.0963
2023-03-10 11:10:13,127 - mmdet - INFO - Epoch [1][1370/4068]	lr: 1.000e-02, eta: 0:14:35, time: 0.321, data_time: 0.023, memory: 6174, loss_cls: 1.7690, loss_bbox: 1.7819, loss_mask: 0.6102, loss_centerness: 0.5874, loss: 4.7485, grad_norm: 3.9925
2023-03-10 11:10:16,362 - mmdet - INFO - Epoch [1][1380/4068]	lr: 1.000e-02, eta: 0:14:32, time: 0.324, data_time: 0.024, memory: 6174, loss_cls: 1.9592, loss_bbox: 1.9699, loss_mask: 0.5157, loss_centerness: 0.6368, loss: 5.0817, grad_norm: 3.6314
2023-03-10 11:10:19,615 - mmdet - INFO - Epoch [1][1390/4068]	lr: 1.000e-02, eta: 0:14:29, time: 0.325, data_time: 0.028, memory: 6174, loss_cls: 1.8965, loss_bbox: 1.7159, loss_mask: 0.4695, loss_centerness: 0.6107, loss: 4.6925, grad_norm: 4.1122
2023-03-10 11:10:22,875 - mmdet - INFO - Epoch [1][1400/4068]	lr: 1.000e-02, eta: 0:14:26, time: 0.326, data_time: 0.028, memory: 6174, loss_cls: 2.1493, loss_bbox: 1.8584, loss_mask: 0.5525, loss_centerness: 0.5517, loss: 5.1120, grad_norm: 3.8932
2023-03-10 11:10:26,113 - mmdet - INFO - Epoch [1][1410/4068]	lr: 1.000e-02, eta: 0:14:22, time: 0.324, data_time: 0.026, memory: 6174, loss_cls: 2.1164, loss_bbox: 2.0056, loss_mask: 0.5568, loss_centerness: 0.6856, loss: 5.3643, grad_norm: 3.7755
2023-03-10 11:10:29,317 - mmdet - INFO - Epoch [1][1420/4068]	lr: 1.000e-02, eta: 0:14:19, time: 0.320, data_time: 0.023, memory: 6174, loss_cls: 2.0994, loss_bbox: 1.4894, loss_mask: 0.3969, loss_centerness: 0.5043, loss: 4.4900, grad_norm: 4.3023
2023-03-10 11:10:32,559 - mmdet - INFO - Epoch [1][1430/4068]	lr: 1.000e-02, eta: 0:14:16, time: 0.324, data_time: 0.026, memory: 6174, loss_cls: 1.9718, loss_bbox: 1.9239, loss_mask: 0.4896, loss_centerness: 0.6904, loss: 5.0756, grad_norm: 3.7892
2023-03-10 11:10:35,794 - mmdet - INFO - Epoch [1][1440/4068]	lr: 1.000e-02, eta: 0:14:13, time: 0.324, data_time: 0.024, memory: 6174, loss_cls: 2.0144, loss_bbox: 1.6914, loss_mask: 0.4538, loss_centerness: 0.6084, loss: 4.7680, grad_norm: 3.8485
2023-03-10 11:10:39,013 - mmdet - INFO - Epoch [1][1450/4068]	lr: 1.000e-02, eta: 0:14:09, time: 0.322, data_time: 0.023, memory: 6174, loss_cls: 1.5802, loss_bbox: 1.7035, loss_mask: 0.5521, loss_centerness: 0.5954, loss: 4.4311, grad_norm: 3.9616
2023-03-10 11:10:42,266 - mmdet - INFO - Epoch [1][1460/4068]	lr: 1.000e-02, eta: 0:14:06, time: 0.325, data_time: 0.025, memory: 6174, loss_cls: 2.0190, loss_bbox: 1.7954, loss_mask: 0.4421, loss_centerness: 0.6770, loss: 4.9335, grad_norm: 4.1548
2023-03-10 11:10:45,514 - mmdet - INFO - Epoch [1][1470/4068]	lr: 1.000e-02, eta: 0:14:03, time: 0.325, data_time: 0.025, memory: 6174, loss_cls: 1.9557, loss_bbox: 1.8019, loss_mask: 0.4734, loss_centerness: 0.6564, loss: 4.8875, grad_norm: 3.2223
2023-03-10 11:10:48,754 - mmdet - INFO - Epoch [1][1480/4068]	lr: 1.000e-02, eta: 0:14:00, time: 0.324, data_time: 0.024, memory: 6174, loss_cls: 1.8841, loss_bbox: 1.5465, loss_mask: 0.4027, loss_centerness: 0.5345, loss: 4.3678, grad_norm: 4.1247
2023-03-10 11:10:51,987 - mmdet - INFO - Epoch [1][1490/4068]	lr: 1.000e-02, eta: 0:13:56, time: 0.323, data_time: 0.024, memory: 6174, loss_cls: 2.4542, loss_bbox: 1.9797, loss_mask: 0.4676, loss_centerness: 0.6891, loss: 5.5907, grad_norm: 4.1325
2023-03-10 11:10:55,209 - mmdet - INFO - Epoch [1][1500/4068]	lr: 1.000e-02, eta: 0:13:53, time: 0.322, data_time: 0.023, memory: 6174, loss_cls: 1.4569, loss_bbox: 1.4761, loss_mask: 0.3665, loss_centerness: 0.4662, loss: 3.7657, grad_norm: 3.8820
2023-03-10 11:10:58,437 - mmdet - INFO - Epoch [1][1510/4068]	lr: 1.000e-02, eta: 0:13:50, time: 0.323, data_time: 0.025, memory: 6174, loss_cls: 1.8075, loss_bbox: 1.7601, loss_mask: 0.4193, loss_centerness: 0.6010, loss: 4.5879, grad_norm: 3.3672
2023-03-10 11:11:01,696 - mmdet - INFO - Epoch [1][1520/4068]	lr: 1.000e-02, eta: 0:13:46, time: 0.326, data_time: 0.028, memory: 6174, loss_cls: 1.8473, loss_bbox: 2.1008, loss_mask: 0.5379, loss_centerness: 0.6628, loss: 5.1488, grad_norm: 3.6873
2023-03-10 11:11:04,937 - mmdet - INFO - Epoch [1][1530/4068]	lr: 1.000e-02, eta: 0:13:43, time: 0.324, data_time: 0.026, memory: 6174, loss_cls: 1.9749, loss_bbox: 1.9069, loss_mask: 0.5574, loss_centerness: 0.5764, loss: 5.0156, grad_norm: 4.7574
2023-03-10 11:11:08,189 - mmdet - INFO - Epoch [1][1540/4068]	lr: 1.000e-02, eta: 0:13:40, time: 0.325, data_time: 0.027, memory: 6174, loss_cls: 1.9047, loss_bbox: 1.6547, loss_mask: 0.3631, loss_centerness: 0.6027, loss: 4.5253, grad_norm: 3.0792
